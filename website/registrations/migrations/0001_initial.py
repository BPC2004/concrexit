# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-14 16:30
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    operations = [
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created at')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updated at')),
                ('status', models.CharField(choices=[('confirm', 'Awaiting email confirmation'), ('review', 'Ready for review'), ('rejected', 'Rejected'), ('accepted', 'Accepted')], default='confirm', max_length=20, verbose_name='status')),
                ('length', models.CharField(choices=[('year', 'One year'), ('study', 'Until graduation')], max_length=20, verbose_name='membership length')),
                ('membership_type', models.CharField(choices=[('member', 'Member'), ('supporter', 'Supporter')], default='member', max_length=40, verbose_name='membership type')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='remarks')),
            ],
            options={
                'verbose_name': 'entry',
                'verbose_name_plural': 'entries',
                'permissions': (('review_entries', 'Review registration and renewal entries'),),
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created at')),
                ('type', models.CharField(blank=True, choices=[('cash_payment', 'cash payment'), ('card_payment', 'card payment')], max_length=20, null=True, verbose_name='type')),
                ('amount', models.DecimalField(decimal_places=2, default=7.5, max_digits=4)),
                ('processed', models.BooleanField(default=False, verbose_name='processed')),
                ('processing_date', models.DateTimeField(blank=True, null=True, verbose_name='processing date')),
            ],
            options={
                'verbose_name': 'payment',
                'verbose_name_plural': 'payments',
                'permissions': (('process_payments', 'Process payments'),),
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('entry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='registrations.Entry')),
                ('username', models.CharField(blank=True, help_text='Enter value to override the auto-generated username (e.g. if it is not unique)', max_length=150, null=True, verbose_name='Username')),
                ('first_name', models.CharField(max_length=30, verbose_name='First name')),
                ('last_name', models.CharField(max_length=200, verbose_name='Last name')),
                ('birthday', models.DateField(verbose_name='birthday')),
                ('language', models.CharField(choices=[('en', 'English'), ('nl', 'Dutch')], default='nl', max_length=5, verbose_name='language')),
                ('email', models.EmailField(max_length=254, verbose_name='Email address')),
                ('phone_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='please enter a valid phone number', regex='^\\+?\\d+$')], verbose_name='phone number')),
                ('student_number', models.CharField(blank=True, max_length=8, null=True, validators=[django.core.validators.RegexValidator(message='enter a valid student- or e/z/u-number.', regex='(s\\d{7}|[ezu]\\d{6,7})')], verbose_name='student number')),
                ('programme', models.CharField(blank=True, choices=[('computingscience', 'Computing Science'), ('informationscience', 'Information Sciences')], max_length=20, null=True, verbose_name='study programme')),
                ('starting_year', models.IntegerField(blank=True, null=True, verbose_name='starting year')),
                ('address_street', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='include the house number', regex='^.+ \\d+.*')], verbose_name='street and house number')),
                ('address_street2', models.CharField(blank=True, max_length=100, null=True, verbose_name='second address line')),
                ('address_postal_code', models.CharField(max_length=10, verbose_name='postal code')),
                ('address_city', models.CharField(max_length=40, verbose_name='city')),
            ],
            options={
                'verbose_name': 'registation',
                'verbose_name_plural': 'registrations',
            },
            bases=('registrations.entry',),
        ),
        migrations.CreateModel(
            name='Renewal',
            fields=[
                ('entry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='registrations.Entry')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.Member', verbose_name='member')),
            ],
            options={
                'verbose_name': 'renewal',
                'verbose_name_plural': 'renewals',
            },
            bases=('registrations.entry',),
        ),
        migrations.AddField(
            model_name='payment',
            name='entry',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='registrations.Entry'),
        ),
        migrations.AddField(
            model_name='payment',
            name='membership',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='members.Membership'),
        ),
    ]
