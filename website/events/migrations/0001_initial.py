# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-10-21 17:28
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('members', '0010_merge_20160907_2042'),
        ('activemembers', '0011_auto_20161005_2141'),
    ]

    operations = [
        migrations.CreateModel(
            name='BooleanRegistrationInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed', models.DateTimeField(auto_now=True, verbose_name='last changed')),
                ('value', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(verbose_name='start time')),
                ('end', models.DateTimeField(verbose_name='end time')),
                ('registration_start', models.DateTimeField(blank=True, null=True, verbose_name='registration start')),
                ('registration_end', models.DateTimeField(blank=True, null=True, verbose_name='registration end')),
                ('cancel_deadline', models.DateTimeField(blank=True, null=True, verbose_name='cancel deadline')),
                ('map_location', models.CharField(help_text='Location of Huygens: Heyendaalseweg 135, Nijmegen. Not shown as text!!', max_length=255, verbose_name='location for minimap')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='price')),
                ('cost', models.DecimalField(decimal_places=2, default=0, help_text='Actual cost of event.', max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='cost')),
                ('max_participants', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='maximum number of participants')),
                ('published', models.BooleanField(default=False, verbose_name='published')),
                ('no_registration_message_en', models.CharField(blank=True, help_text='Default: No registration required', max_length=200, null=True, verbose_name='message when there is no registration (EN)')),
                ('no_registration_message_nl', models.CharField(blank=True, help_text='Default: No registration required', max_length=200, null=True, verbose_name='message when there is no registration (NL)')),
                ('title_en', models.CharField(max_length=100, verbose_name='title (EN)')),
                ('title_nl', models.CharField(max_length=100, verbose_name='title (NL)')),
                ('location_en', models.CharField(max_length=255, verbose_name='location (EN)')),
                ('location_nl', models.CharField(max_length=255, verbose_name='location (NL)')),
                ('description_en', models.TextField(verbose_name='description (EN)')),
                ('description_nl', models.TextField(verbose_name='description (NL)')),
                ('organiser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='activemembers.Committee', verbose_name='organiser')),
            ],
            options={
                'ordering': ('-start',),
            },
        ),
        migrations.CreateModel(
            name='IntegerRegistrationInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed', models.DateTimeField(auto_now=True, verbose_name='last changed')),
                ('value', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Use this for non-members', max_length=50, null=True, verbose_name='name')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='registration date')),
                ('date_cancelled', models.DateTimeField(blank=True, null=True, verbose_name='cancellation date')),
                ('present', models.BooleanField(default=False, verbose_name='present')),
                ('paid', models.BooleanField(default=False, verbose_name='paid')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='members.Member')),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='RegistrationInformationField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('boolean', 'Checkbox'), ('text', 'Text'), ('integer', 'Integer')], max_length=10, verbose_name='field type')),
                ('required', models.BooleanField(verbose_name='required')),
                ('name_en', models.CharField(max_length=100, verbose_name='field name (EN)')),
                ('name_nl', models.CharField(max_length=100, verbose_name='field name (NL)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='description (EN)')),
                ('description_nl', models.TextField(blank=True, null=True, verbose_name='description (NL)')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
            ],
        ),
        migrations.CreateModel(
            name='TextRegistrationInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed', models.DateTimeField(auto_now=True, verbose_name='last changed')),
                ('value', models.TextField()),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.RegistrationInformationField')),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Registration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='integerregistrationinformation',
            name='field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.RegistrationInformationField'),
        ),
        migrations.AddField(
            model_name='integerregistrationinformation',
            name='registration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Registration'),
        ),
        migrations.AddField(
            model_name='booleanregistrationinformation',
            name='field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.RegistrationInformationField'),
        ),
        migrations.AddField(
            model_name='booleanregistrationinformation',
            name='registration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Registration'),
        ),
        migrations.AlterOrderWithRespectTo(
            name='registrationinformationfield',
            order_with_respect_to='event',
        ),
        migrations.AlterUniqueTogether(
            name='registration',
            unique_together=set([('member', 'event', 'name', 'date_cancelled')]),
        ),
    ]
